---

- hosts: localhost
  gather_facts: true

  tasks:

#     - name: configure minikube
#       shell: |
#         set -x
#         minikube stop
#         minikube delete -p minikube
#         minikube config set cpus 4
#         minikube config set memory 8192
#         minikube config set disk-size 20g
#         minikube start
#         minikube addons enable metallb
#         minikube addons configure metallb 
# #  minikube addons configure metallb
# # based on minikube ip
# # -- Enter Load Balancer Start IP: 192.168.64.5
# # -- Enter Load Balancer End IP: 192.168.64.10

    - name: Get existing image hash.
      shell: |
        eval $(minikube docker-env)
        docker images -q {{ image_name }}
      register: image_hash
      changed_when: false

    - name: Build image if it's not already built.
      shell: |
        eval $(minikube docker-env)
        docker build -t {{ image_name }} .
      when: not image_hash.stdout
# Create Kubernetes resources to run Hello Go.
    - name: Create a Deployment for Hello Go.
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hello-go
            namespace: default
          spec:
            replicas: "{{ replicas }}"
            selector:
              matchLabels:
                app: hello-go
            template:
              metadata:
                labels:
                  app: hello-go
              spec:
                containers:
                - name: hello-go
                  image: "{{ image_name }}:{{ image_tag }}"
                  imagePullPolicy: IfNotPresent
                  ports:
                  - containerPort: 5000
# Create Kubernetes Service (DNS required)
    - name: Create a Service for Hello Go.
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-go
            namespace: default
          spec:
            type: LoadBalancer
            ports:
            - port: 5000
              targetPort: 5000
            selector:
              app: hello-go
  post_tasks:
      #Example export using minikube services
      - name: Expose Hello Go on the host via Minikube.
        command: minikube service hello-go --url=true
        changed_when: false
        register: minikube_service
      - debug:
          msg: "Hello Go URL: {{ minikube_service['stdout_lines'][0] }}"
      - name: Verify Hello Go is responding.
        uri:
          url: "{{ minikube_service['stdout_lines'][0] }}/"
          return_content: true
        register: hello_go_response
        failed_when: "'Hello' not in hello_go_response.content"
      - debug:
              msg: "Testing URL Hello GO Requested: {{hello_go_response.content}} Status: {{hello_go_response.status}}"
