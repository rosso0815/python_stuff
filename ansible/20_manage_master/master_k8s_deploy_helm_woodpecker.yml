---

#
# first register in gitea a oauth2 app with http://woodpecker.localnet/authorize
# and get clientid and secret
#

- name: deploy woodpecker
  hosts: localhost
  gather_facts: false
  connection: false

  tasks:

    - name: Add stable chart repo
      kubernetes.core.helm_repository:
        name: woodpecker
        force_update: true
        repo_url: https://woodpecker-ci.org/

    - name: Create a k8s namespace
      kubernetes.core.k8s:
        name: '{{ woodpecker_namespace }}'
        api_version: v1
        kind: Namespace
        state: present

    # - name: create tls
    #   environment:
    #     KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    #   kubernetes.core.k8s:
    #     state: present
    #     definition:
    #       apiVersion: v1
    #       kind: Secret
    #       type: kubernetes.io/tls
    #       metadata:
    #         name: woodpecker-tls
    #         namespace: woodpecker
    #       data:
    #         tls.crt: '{{ woodpecker_tls_crt }}'
    #         tls.key: '{{ woodpecker_tls_key }}'


    - name: helm deploy woodpecker
      kubernetes.core.helm:
        name: woodpecker
        chart_ref: woodpecker/woodpecker
        chart_version: 2.0.3
        release_namespace: '{{ woodpecker_namespace }}'
        create_namespace: false
        update_repo_cache: true
        values:
          agent:
            replicaCount: 1
            env:
              WOODPECKER_SERVER: 'woodpecker-server:9000'
              WOODPECKER_AGENT_SECRET: dd4b696764587af9b42c5c23f3ca0f69f2c1e6ff677d51b5d4432608945cb43f
              WOODPECKER_BACKEND: kubernetes
              WOODPECKER_BACKEND_K8S_NAMESPACE: '{{ woodpecker_namespace }}'
              WOODPECKER_BACKEND_K8S_STORAGE_RWX: false
              WOODPECKER_LOG_LEVEL: trace
              # WOODPECKER_DATABASE_DRIVER: postgres
              # WOODPECKER_DATABASE_DATASOURCE: postgres://woodpecker:woodpecker@database.localnet:5432/woodpecker?sslmode=disable
          server:
            env:
              WOODPECKER_OPEN: true
              WOODPECKER_ADMIN: 'woodpecker,admin,pfistera'
              WOODPECKER_HOST: https://woodpecker.localnet
              WOODPECKER_AGENT_SECRET: dd4b696764587af9b42c5c23f3ca0f69f2c1e6ff677d51b5d4432608945cb43f
              WOODPECKER_GITEA: true
              WOODPECKER_GITEA_URL: https://gitea.localnet
              WOODPECKER_GITEA_CLIENT: '{{ woodpecker_oauth_id }}'
              WOODPECKER_GITEA_SECRET: '{{ woodpecker_oauth_secret }}'
              WOODPECKER_GITEA_SKIP_VERIFY: true
              WOODPECKER_BACKEND: kubernetes
              WOODPECKER_BACKEND_K8S_NAMESPACE: '{{ woodpecker_namespace }}'
              WOODPECKER_LOG_LEVEL: trace
              # WOODPECKER_DATABASE_DRIVER: postgres
              # WOODPECKER_DATABASE_DATASOURCE: postgres://woodpecker:woodpecker@database.localnet:5432/woodpecker?sslmode=disable
            service:
              type: ClusterIP
              port: &servicePort 80
              clusterIP:
              loadBalancerIP:
            ingress:
              enabled: true
              ingressClassName: 'traefik'
              className: traefik
              annotations:
                cert-manager.io/cluster-issuer: my-own-issuer
                cert-manager.io/common-name: woodpecker.localnet
              hosts:
                - host: woodpecker.localnet
                  paths:
                    - path: /
                      backend:
                        serviceName: chart-example.local
                        servicePort: *servicePort
              tls:
                - hosts:
                    - woodpecker.localnet
                  secretName: woodpecker-tls

# --- EOF
